import os
from dotenv import load_dotenv

# TODO: –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—è—Å–Ω–µ–Ω–∏—è –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
DEFAULT_DB_URL = "postgresql+psycopg://user:password@localhost:5432/notes_db"
DEFAULT_SECRET_KEY = "y0jzdiJ22BvKOf5"

class AppSettings:

    def __init__(self):
        load_dotenv()

        self.DATABASE_URL: str = os.getenv("DATABASE_URL", DEFAULT_DB_URL)
        self.SECRET_KEY: str = os.getenv("SECRET_KEY", DEFAULT_SECRET_KEY)
        env = os.getenv("ENV", "development")
        env = env.lower()
        if env not in {"development", "production", "test"}:
            raise ValueError("ENV –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: 'development', 'production', 'test'")
        self.ENV: str = env
        self.DEBUG: bool = (self.ENV == "development")
        self.IS_SQLITE: bool = self.DATABASE_URL.strip().lower().startswith("sqlite")    
    
        def get_int_env(var_name: str, default: int) -> int:
            value = os.getenv(var_name)
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º int(value), –µ—Å–ª–∏ value –Ω–µ None –∏ –Ω–µ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, 
            # –∏–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º default
            if value is None or value == "":
                return default
            
            try:
                return int(value)
            except ValueError:
                raise ValueError(f"–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ '{value}' –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π '{var_name}'.")
        
        self.DB_POOL_SIZE: int = get_int_env("DB_POOL_SIZE", 5)
        self.DB_MAX_OVERFLOW: int = get_int_env("DB_MAX_OVERFLOW", 10)
        self.DB_POOL_TIMEOUT: int = get_int_env("DB_POOL_TIMEOUT", 30)
    
    def _check_production_safety(self):
        if self.ENV == "production":
            errors = []
            
            if self.IS_SQLITE:
                errors.append("–í production –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SQLite. –£–∫–∞–∂–∏—Ç–µ PostgreSQL URL")
            
            if self.DATABASE_URL == DEFAULT_DB_URL:
                errors.append("DATABASE_URL –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–ª–æ–∫–∞–ª—å–Ω–æ–µ/—Ç–µ—Å—Ç–æ–≤–æ–µ).")
                
            if self.SECRET_KEY == DEFAULT_SECRET_KEY:
                errors.append("SECRET_KEY –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ('y0jzdiJ22BvKOf5').")
                
            if not (16 <= len(self.SECRET_KEY) <= 32):
                errors.append("SECRET_KEY –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –æ—Ç 16 –¥–æ 32 —Å–∏–º–≤–æ–ª–æ–≤.")

            if errors:
                error_message = (
                    "\n\nüö® –û–®–ò–ë–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò: –ó–ê–ü–£–°–ö –ü–†–û–î–ê–ö–®–ï–ù–ê –ù–ê –î–ï–§–û–õ–¢–ê–• üö®\n\n"
                    "–û–∫—Ä—É–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞–∫ 'production', –Ω–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:\n"
                    f"- {os.linesep.join(errors)}\n\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è DATABASE_URL –∏ SECRET_KEY "
                    "–≤ –≤–∞—à–µ–º —Ñ–∞–π–ª–µ .env.\n"
                )
                
                # –í—ã–∑—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                raise ValueError(error_message)
    
settings = AppSettings()
settings._check_production_safety()